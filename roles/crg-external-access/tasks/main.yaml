---
- name: create address objects
  fortios_firewall_address:
    state: present
    #ssl_verify: False 
    #host: "{{ ansible_host }}"
    firewall_address:
      name: "{{ item.name }}"                            # pb.crg.yaml; passed in from cli
      associated_interface: "{{ interfaces.inside }}"   # role vars;  
      #comment:  "{{ comment }}"                     # prompted at runtime
      subnet: "{{ item.name }}"                       # pb.crg.yaml; passed in from cli
  loop: "{{ build_params.shared_params.custGrpVips }}"
  
- name: Create Address group and add objects
  fortios_firewall_addrgrp:
        state: present
        #ssl_verify: False 
        #https: False
        #host: "{{ ansible_host }}"
        firewall_addrgrp:
          allow_routing: "enable"
          comment: "comment"
          name: "{{ build_params.custTag }}"
          member:  "{{ build_params.shared_params.custGrpVips }}"  


- name: Deploy Customer Policy
  fortios_firewall_policy:
    state: present
    firewall_policy:
      policyid: 0
          #comment: "{{ comment }}"
      srcaddr:        # source address or addrgrp name; type: list w/suboption dict/key
        - name: "all"
      srcintf:        # Ingress Inft-name; type: list w/suboption dict/key
        - name: "{{ interfaces.outside }}"
      dstaddr:         # dest address or addrgrp name; type: list w/suboption dict/key
        - name: "{{ build_params.custTag }}"   
      dstintf:        # egress Inft-name; type: list w/suboption dict/key
        - name:  "{{ interfaces.inside }}"
      schedule:  always     #
      service:        #  service or service-group name; list w/suboption dict/key
        - name: "HTTPS"
      action: accept
      logtraffic: all 
